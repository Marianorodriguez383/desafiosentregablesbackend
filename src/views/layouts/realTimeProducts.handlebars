<!-- views/realTimeProducts.handlebars -->

<h1>Lista de Productos en Tiempo Real</h1>
<ul id="realTimeProductList">
  <!-- La lista se actualiza automáticamente a través de websockets -->
</ul>

<!-- Formulario para agregar productos -->
<form id="productForm">
  <label for="productName">Nombre:</label>
  <input type="text" id="productName" name="name" required>
  <label for="productPrice">Precio:</label>
  <input type="number" id="productPrice" name="price" required>
  <button type="submit">Agregar Producto</button>
</form>

<script src="/socket.io/socket.io.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const socket = io();

    // Función para agregar un producto a la lista
    function addProductToList(product) {
      const productList = document.getElementById('realTimeProductList');
      const listItem = document.createElement('li');
      listItem.textContent = `${product.name} - ${product.price}`;
      productList.appendChild(listItem);
    }

    // Escuchar evento de producto agregado
    socket.on('productAdded', addProductToList);

    // Escuchar evento de producto eliminado 
    socket.on('productDeleted', () => {
      // Recargar la lista completa / realizar cambios específicos 
    });

    // Manejar el envío del formulario para agregar un nuevo producto
    document.getElementById('productForm').addEventListener('submit', (event) => {
      event.preventDefault();
      const productName = document.getElementById('productName').value;
      const productPrice = document.getElementById('productPrice').value;

      // Enviar el evento 'addProduct' al servidor con los datos del nuevo producto
      socket.emit('addProduct', { name: productName, price: productPrice });
    });
  });
</script>
